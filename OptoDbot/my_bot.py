import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackContext
import asyncio
import nest_asyncio
import os

nest_asyncio.apply()

# –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∂—É—Ä–Ω–∞–ª—é–≤–∞–Ω–Ω—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ß–∏—Ç–∞—î–º–æ —Ç–æ–∫–µ–Ω —ñ–∑ –∑–º—ñ–Ω–Ω–æ—ó –æ—Ç–æ—á–µ–Ω–Ω—è
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ç–æ–∫–µ–Ω–∞
if TOKEN is None:
    logger.error("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ TELEGRAM_BOT_TOKEN.")
    exit(1)

# –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ –∫–æ–º–∞–Ω–¥—ñ /start
async def start(update: Update, context: CallbackContext):
    try:
        user_first_name = update.effective_user.first_name

        await context.bot.send_photo(chat_id=update.effective_chat.id,
                                     photo='https://optodrop.com.ua/image/catalog/blog/blog5.jpg')

        keyboard = [
            [InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url='https://optodrop.com.ua/')],
            [InlineKeyboardButton("–ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", url='https://t.me/ibanan_ua')],
            [InlineKeyboardButton("–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª", url='https://t.me/+_XAQaKaIPMcwZjMy')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        welcome_text = f"""
üëã {user_first_name}, —Ä–∞–¥—ñ –≤—ñ—Ç–∞—Ç–∏ –≤–∞—Å —É –±–æ—Ç—ñ OPTODROP!

üîπ OPTODROP ‚Äî –ø–µ—Ä—à–∏–π —É —Å–≤—ñ—Ç—ñ –º–∞–≥–∞–∑–∏–Ω –º–æ–±—ñ–ª—å–Ω–∏—Ö –∞–∫—Å–µ—Å—É–∞—Ä—ñ–≤ —Ç–∞ —ñ–Ω—à–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞ –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ —Ü—ñ–Ω–∞–º–∏!
üîπ –®–∏—Ä–æ–∫–∏–π –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç: –ü–æ–Ω–∞–¥ 10,000+ —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Å–º–∞–∫—É —Ç–∞ –±—é–¥–∂–µ—Ç—É.
üîπ –ù–∞–π–∫—Ä–∞—â—ñ —Ü—ñ–Ω–∏: –ü—Ä—è–º–∏–π —ñ–º–ø–æ—Ä—Ç –≤—ñ–¥ –±—Ä–µ–Ω–¥—ñ–≤ Hoco, Baseus, iNobi, Borofone, Remax —Ç–∞ —ñ–Ω—à—ñ.
üîπ –®–≤–∏–¥–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞: –ó–∞–º–æ–≤–ª—è–π—Ç–µ —Å—å–æ–≥–æ–¥–Ω—ñ ‚Äî –æ—Ç—Ä–∏–º—É–π—Ç–µ –≤–∂–µ –∑–∞–≤—Ç—Ä–∞!
üîπ –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞: –ù–∞—à—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏ –∑–∞–≤–∂–¥–∏ –Ω–∞ –∑–≤'—è–∑–∫—É –π –≥–æ—Ç–æ–≤—ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏!

üëá –û–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –æ–ø—Ü—ñ–π, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏!
"""
        await context.bot.send_message(chat_id=update.effective_chat.id, text=welcome_text, reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"Error occurred while sending photo or message: {e}")

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
async def main():
    application = ApplicationBuilder().token(TOKEN).build()
    start_handler = CommandHandler('start', start)
    application.add_handler(start_handler)

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–µ–±—Ö—É–∫–∞
    webhook_url = os.getenv('WEBHOOK_URL')  # –í–∞—à URL –¥–ª—è –≤–µ–±—Ö—É–∫–∞
    await application.bot.set_webhook(webhook_url)

    print("–ë–æ—Ç –ø—Ä–∞—Ü—é—î. –ù–∞—Ç–∏—Å–Ω–∏ Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–∫–∏.")
    await application.run_webhook(listen="0.0.0.0", port=int(os.environ.get("PORT", 5000)), url_path='webhook')

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
if __name__ == '__main__':
    asyncio.run(main())
