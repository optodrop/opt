import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackContext
import asyncio
import nest_asyncio  # –î–æ–¥–∞—î–º–æ —Ü—é –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É

nest_asyncio.apply()  # –î–æ–¥–∞—î–º–æ —Ü—é —Å—Ç—Ä–æ–∫—É –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –≤–∞—à–æ–≥–æ –±–æ—Ç–∞

# –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∂—É—Ä–Ω–∞–ª—é–≤–∞–Ω–Ω—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

import os
TOKEN = os.getenv('TOKEN')  # –ß–∏—Ç–∞—î–º–æ —Ç–æ–∫–µ–Ω —ñ–∑ –∑–º—ñ–Ω–Ω–æ—ó –æ—Ç–æ—á–µ–Ω–Ω—è

# –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ –∫–æ–º–∞–Ω–¥—ñ /start
async def start(update: Update, context: CallbackContext):
    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user_first_name = update.effective_user.first_name

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é
        await context.bot.send_photo(chat_id=update.effective_chat.id,
                                     photo='https://optodrop.com.ua/image/catalog/blog/blog5.jpg')

        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫–∏
        keyboard = [
            [InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url='https://optodrop.com.ua/')],
            [InlineKeyboardButton("–ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", url='https://t.me/ibanan_ua')],
            [InlineKeyboardButton("–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª", url='https://t.me/+_XAQaKaIPMcwZjMy')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –¢–µ–∫—Å—Ç –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
        welcome_text = f"""
üëã {user_first_name}, —Ä–∞–¥—ñ –≤—ñ—Ç–∞—Ç–∏ –≤–∞—Å —É –±–æ—Ç—ñ OPTODROP!

üîπ OPTODROP ‚Äî –ø–µ—Ä—à–∏–π —É —Å–≤—ñ—Ç—ñ –º–∞–≥–∞–∑–∏–Ω –º–æ–±—ñ–ª—å–Ω–∏—Ö –∞–∫—Å–µ—Å—É–∞—Ä—ñ–≤ —Ç–∞ —ñ–Ω—à–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞ –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ —Ü—ñ–Ω–∞–º–∏!
üîπ –®–∏—Ä–æ–∫–∏–π –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç: –ü–æ–Ω–∞–¥ 10,000+ —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Å–º–∞–∫—É —Ç–∞ –±—é–¥–∂–µ—Ç—É.
üîπ –ù–∞–π–∫—Ä–∞—â—ñ —Ü—ñ–Ω–∏: –ü—Ä—è–º–∏–π —ñ–º–ø–æ—Ä—Ç –≤—ñ–¥ –±—Ä–µ–Ω–¥—ñ–≤ Hoco, Baseus, iNobi, Borofone, Remax —Ç–∞ —ñ–Ω—à—ñ.
üîπ –®–≤–∏–¥–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞: –ó–∞–º–æ–≤–ª—è–π—Ç–µ —Å—å–æ–≥–æ–¥–Ω—ñ ‚Äî –æ—Ç—Ä–∏–º—É–π—Ç–µ –≤–∂–µ –∑–∞–≤—Ç—Ä–∞!
üîπ –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞: –ù–∞—à—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏ –∑–∞–≤–∂–¥–∏ –Ω–∞ –∑–≤'—è–∑–∫—É –π –≥–æ—Ç–æ–≤—ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏!

üëá –û–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –æ–ø—Ü—ñ–π, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏!
"""
        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        await context.bot.send_message(chat_id=update.effective_chat.id, text=welcome_text, reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"Error occurred while sending photo or message: {e}")

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
async def main():
    application = ApplicationBuilder().token(TOKEN).build()
    start_handler = CommandHandler('start', start)
    application.add_handler(start_handler)

    print("–ë–æ—Ç –ø—Ä–∞—Ü—é—î. –ù–∞—Ç–∏—Å–Ω–∏ Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–∫–∏.")
    await application.run_polling()

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
if __name__ == '__main__':
    asyncio.run(main())  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ asyncio.run() –¥–ª—è –∑–∞–ø—É—Å–∫—É
